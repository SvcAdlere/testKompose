apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml
    kompose.version: 1.35.0 (9532ceef3)
  labels:
    io.kompose.service: postgres
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: postgres
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml
        kompose.version: 1.35.0 (9532ceef3)
      labels:
        io.kompose.service: postgres
    spec:
      containers:
        - env:
            - name: GF_DATABASE_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: GF_DATABASE_PASSWORD
                  name: env
            - name: PGPASSWORD
              valueFrom:
                configMapKeyRef:
                  key: PGPASSWORD
                  name: env
            - name: POSTGRESQL_DATABASE
              value: grafana
            - name: POSTGRESQL_LOG_HOSTNAME
              value: "true"
            - name: POSTGRESQL_USERNAME
              value: grafana
            - name: POSTGRES_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_PASSWORD
                  name: env
            - name: TZ
              value: Europe/Paris
            - name: ldap_password
              valueFrom:
                configMapKeyRef:
                  key: ldap_password
                  name: env
          image: bitnami/postgresql:15
          name: postgres
          ports:
            - containerPort: 5432
              protocol: TCP
          resources:
            limits:
              memory: "536870912"
            requests:
              memory: "268435456"
          volumeMounts:
            - mountPath: /docker-entrypoint-initdb.d/init.sql
              name: postgres-cm0
              subPath: init.sql
            - mountPath: /etc/localtime
              name: postgres-cm1
              readOnly: true
              subPath: localtime
            - mountPath: /bitnami/postgresql
              name: postgres-cm2
      restartPolicy: Always
      volumes:
        - configMap:
            items:
              - key: init.sql
                path: init.sql
            name: postgres-cm0
          name: postgres-cm0
        - configMap:
            items:
              - key: localtime
                path: localtime
            name: postgres-cm1
          name: postgres-cm1
        - configMap:
            name: postgres-cm2
          name: postgres-cm2
