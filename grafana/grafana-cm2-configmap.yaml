apiVersion: v1
data:
  ldap.toml: |
    # To troubleshoot and get more log info enable ldap debug logging in grafana.ini
    # [log]
    # filters = ldap:debug

    [[servers]]
    # Ldap server host (specify multiple hosts space separated)
    host = "ldap1-exploit.dsi.inrae.fr"

    # Default port is 389 or 636 if use_ssl = true
    port = 636

    # Set to true if LDAP server should use an encrypted TLS connection (either with STARTTLS or LDAPS)
    use_ssl = true

    # If set to true, use LDAP with STARTTLS instead of LDAPS
    start_tls = false
    # set to true if you want to skip ssl cert validation
    ssl_skip_verify = true
    # set to the path to your root CA certificate or leave unset to use system defaults
    # root_ca_cert = "/path/to/certificate.crt"
    # Authentication against LDAP servers requiring client certificates
    # client_cert = "/path/to/client.crt"
    # client_key = "/path/to/client.key"

    # Search user bind dn
    #bind_dn = "cn=admin,dc=grafana,dc=org"
    bind_dn = "cn=admin,dc=dsi,dc=inrae,dc=fr"
    # Search user bind password
    # If the password contains # or ; you have to wrap it with triple quotes. Ex """#password;"""
    bind_password = 'toto'

    # Timeout in seconds (applies to each host specified in the 'host' entry (space separated))
    timeout = 10

    # User search filter, for example "(cn=%s)" or "(sAMAccountName=%s)" or "(uid=%s)"
    search_filter = "(uid=%s)"

    # An array of base dns to search through
    search_base_dns = ["ou=exploit,dc=dsi,dc=inrae,dc=fr"]

    ## For Posix or LDAP setups that does not support member_of attribute you can define the below settings
    ## Please check grafana LDAP docs for examples
    group_search_filter = "(&(objectClass=posixGroup)(memberUid=%s))"
    group_search_base_dns = ["ou=groups,ou=exploit,dc=dsi,dc=inrae,dc=fr"]
    group_search_filter_user_attribute = "uid"

    # Specify names of the ldap attributes your ldap uses
    [servers.attributes]
    name = "givenName"
    surname = "sn"
    username = "cn"
    memberUid = "uid"
    email =  "mail"

    # org_id 1 -> EXPLOIT
    # org_id 2 -> Invcomvmbd
    # org_id 35 -> DBA


    [[servers.group_mappings]]
    group_dn = "cn=GRAFANA_EXPLOIT,ou=groups,ou=exploit,dc=dsi,dc=inrae,dc=fr"
    org_role = "Admin"
    # The Grafana organization database id, optional, if left out the default org (id 1) will be used
    org_id = 1

    [[servers.group_mappings]]
    group_dn = "cn=GRAFANA_DBA,ou=groups,ou=exploit,dc=dsi,dc=inrae,dc=fr"
    org_role = "Admin"
    # The Grafana organization database id, optional, if left out the default org (id 1) will be used
    org_id = 2

    [[servers.group_mappings]]
    group_dn = "cn=GRAFANA_EXPLOIT,ou=groups,ou=exploit,dc=dsi,dc=inrae,dc=fr"
    org_role = "Editor"
    # The Grafana organization database id, optional, if left out the default org (id 1) will be used
    org_id = 2

    [[servers.group_mappings]]
    group_dn = "cn=GRAFANA_DBA,ou=groups,ou=exploit,dc=dsi,dc=inrae,dc=fr"
    org_role = "Admin"
    # The Grafana organization database id, optional, if left out the default org (id 1) will be used
    org_id = 35

    [[servers.group_mappings]]
    ## If you want to match all (or no ldap groups) then you can use wildcard
    group_dn = "*"
    org_role = "Viewer"
    # The Grafana organization database id, optional, if left out the default org (id 1) will be used
    org_id = 1
kind: ConfigMap
metadata:
  annotations:
    use-subpath: "true"
  labels:
    io.kompose.service: grafana
  name: grafana-cm2
